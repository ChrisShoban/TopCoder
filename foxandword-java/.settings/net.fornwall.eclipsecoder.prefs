eclipse.preferences.version=1
problemStatement=FoxAndWord.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_35" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>FoxAndWord</string> \n  </void> \n  <void property\="contestName"> \n   <string>Single Round Match 604 - 250 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;FoxAndWord&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;One day, Fox Ciel looked at the words &quot;tokyo&quot; and &quot;kyoto&quot; and noticed an unusual property\:\nWe can split &quot;tokyo&quot; into &quot;to&quot;+&quot;kyo&quot;, and then swap those two parts to obtain &quot;kyo&quot;+&quot;to&quot; \= &quot;kyoto&quot;.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nFormally, let S and T be two different strings.\nWe call the pair (S,T) &lt;i&gt;interesting&lt;/i&gt; if there are two non-empty strings A and B such that S \= A+B and T \= B+A.\nFor example, according to this definition, if S\=&quot;tokyo&quot; and T\=&quot;kyoto&quot;, then the pair (S,T) is interesting, because we can find A\=&quot;to&quot; and B\=&quot;kyo&quot;.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nYou are given a String[] &lt;b&gt;words&lt;/b&gt;.\nReturn the number of interesting pairs we can find among the elements of &lt;b&gt;words&lt;/b&gt;.\nOnly count each pair once.\nE.g., (&quot;tokyo&quot;,&quot;kyoto&quot;) and (&quot;kyoto&quot;,&quot;tokyo&quot;) is the same interesting pair.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;FoxAndWord&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;howManyPairs&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int howManyPairs(String[] words)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;words&lt;/b&gt; will contain between 2 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;words&lt;/b&gt; will contain between 1 and 50 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each character in each element of &lt;b&gt;words&lt;/b&gt; will be a lowercase letter (&apos;a&apos;-&apos;z&apos;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;All the elements in &lt;b&gt;words&lt;/b&gt; will be pairwise distinct.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;tokyo&amp;quot;, &amp;quot;kyoto&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;As mentioned in the problem statement, (&quot;tokyo&quot;, &quot;kyoto&quot;) is an interesting pair.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;aaaaa&amp;quot;, &amp;quot;bbbbb&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(&quot;aaaaa&quot;, &quot;bbbbb&quot;) is not an interesting pair.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;ababab&amp;quot;,&amp;quot;bababa&amp;quot;,&amp;quot;aaabbb&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There is one interesting pair\: (&quot;ababab&quot;,&quot;bababa&quot;).\nNote that for this interesting pair there is more than one way to choose the strings A and B.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;eel&amp;quot;, &amp;quot;ele&amp;quot;, &amp;quot;lee&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;aaa&amp;quot;, &amp;quot;aab&amp;quot;, &amp;quot;aba&amp;quot;, &amp;quot;abb&amp;quot;, &amp;quot;baa&amp;quot;, &amp;quot;bab&amp;quot;, &amp;quot;bba&amp;quot;, &amp;quot;bbb&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;5)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;top&amp;quot;,&amp;quot;coder&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Different elements of &lt;b&gt;words&lt;/b&gt; may have different lengths.\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>howManyPairs</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>words</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.String;</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.Integer</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>tokyo</string> \n         </void> \n         <void index\="1"> \n          <string>kyoto</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>1</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>aaaaa</string> \n         </void> \n         <void index\="1"> \n          <string>bbbbb</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>0</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="3"> \n         <void index\="0"> \n          <string>ababab</string> \n         </void> \n         <void index\="1"> \n          <string>bababa</string> \n         </void> \n         <void index\="2"> \n          <string>aaabbb</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>1</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="3"> \n         <void index\="0"> \n          <string>eel</string> \n         </void> \n         <void index\="1"> \n          <string>ele</string> \n         </void> \n         <void index\="2"> \n          <string>lee</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>3</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="8"> \n         <void index\="0"> \n          <string>aaa</string> \n         </void> \n         <void index\="1"> \n          <string>aab</string> \n         </void> \n         <void index\="2"> \n          <string>aba</string> \n         </void> \n         <void index\="3"> \n          <string>abb</string> \n         </void> \n         <void index\="4"> \n          <string>baa</string> \n         </void> \n         <void index\="5"> \n          <string>bab</string> \n         </void> \n         <void index\="6"> \n          <string>bba</string> \n         </void> \n         <void index\="7"> \n          <string>bbb</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>6</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>top</string> \n         </void> \n         <void index\="1"> \n          <string>coder</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>0</int> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
